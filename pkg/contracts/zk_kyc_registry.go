// Copyright Â© 2025 Galactica Network
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program. If not, see <http://www.gnu.org/licenses/>.

// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contracts

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// KycCertificateData is an auto generated low-level Go binding around an user-defined struct.
type KycCertificateData struct {
	Guardian   common.Address
	QueueIndex *big.Int
	State      uint8
}

// ZkKYCRegistryMetaData contains all meta data concerning the ZkKYCRegistry contract.
var ZkKYCRegistryMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"GuardianRegistry_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"treeDepth_\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"zkCertificateLeafHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"Guardian\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enumRegistryOperation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"queueIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"leafIndex\",\"type\":\"uint256\"}],\"name\":\"CertificateProcessed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"zkCertificateLeafHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"Guardian\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enumRegistryOperation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"queueIndex\",\"type\":\"uint256\"}],\"name\":\"OperationQueued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"ZERO_VALUE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ZkCertificateQueue\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"zkCertificateHash\",\"type\":\"bytes32\"},{\"internalType\":\"enumRegistryOperation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"idHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saltHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"}],\"name\":\"addOperationToQueue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"zkCertificateHash\",\"type\":\"bytes32\"},{\"internalType\":\"enumRegistryOperation\",\"name\":\"operation\",\"type\":\"uint8\"}],\"name\":\"addOperationToQueue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentQueuePointer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getL1BlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"l1BlockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startIndex\",\"type\":\"uint256\"}],\"name\":\"getMerkleRoots\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endIndex\",\"type\":\"uint256\"}],\"name\":\"getMerkleRoots\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"zkCertificateHash\",\"type\":\"bytes32\"}],\"name\":\"getQueuePosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getZkCertificateQueueLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"guardianRegistry\",\"outputs\":[{\"internalType\":\"contractIGuardianRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_right\",\"type\":\"bytes32\"}],\"name\":\"hashLeftRight\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"humanIDSaltRegistry\",\"outputs\":[{\"internalType\":\"contractHumanIDSaltRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initBlockHeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"zkCertificateHash\",\"type\":\"bytes32\"}],\"name\":\"isZkCertificateInTurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"merkleRootIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRootValidIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"merkleRoots\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRootsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"leafIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"zkCertificateHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"processNextOperation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treeDepth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treeSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"verifyMerkleRoot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"zkCertificateHashToData\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"queueIndex\",\"type\":\"uint256\"},{\"internalType\":\"enumCertificateState\",\"name\":\"state\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"zkCertificateHash\",\"type\":\"bytes32\"}],\"name\":\"zkCertificateProcessingData\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"queueIndex\",\"type\":\"uint256\"},{\"internalType\":\"enumCertificateState\",\"name\":\"state\",\"type\":\"uint8\"}],\"internalType\":\"structCertificateData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "0x60c0604052600160035534801561001557600080fd5b50604051613a0a380380613a0a833981016040819052610034916105e1565b828282338061005d57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b610066816102c1565b506000610071610311565b805490915060ff6801000000000000000082041615906001600160401b031660008115801561009d5750825b90506000826001600160401b031660011480156100b95750303b155b9050811580156100c7575080155b156100e55760405163f92ee8a960e01b815260040160405180910390fd5b84546001600160401b0319166001178555831561011357845460ff60401b1916680100000000000000001785555b60808790526101238760026107d3565b60a052610130888761033c565b831561016457845460ff60401b19168555604051600181526000805160206139ea8339815191529060200160405180910390a15b5050505050505050600061017c61031160201b60201c565b805490915060ff6801000000000000000082041615906001600160401b03166000811580156101a85750825b90506000826001600160401b031660011480156101c45750303b155b9050811580156101d2575080155b156101f05760405163f92ee8a960e01b815260040160405180910390fd5b84546001600160401b0319166001178555831561021e57845460ff60401b1916680100000000000000001785555b873060405161022c906105be565b6001600160a01b03928316815291166020820152604001604051809103906000f08015801561025f573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b039290921691909117905583156102b457845460ff60401b19168555604051600181526000805160206139ea8339815191529060200160405180910390a15b50505050505050506109a5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005b92915050565b610344610447565b60016103508282610868565b50600061039d7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017fc9211cf8a2ecf2d9ff7e3f783b959c25e2a209cb6cc7b15ff6d264cbc8a29632610926565b905060005b6080518110156103ca576103b6828061046e565b91506103c3600182610948565b90506103a2565b50600280546001808201835560007f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace9283018190558354808301909455929091018390558282526004602052604090912055600980546001600160a01b0319166001600160a01b03851617905561043f610500565b600555505050565b61044f61059f565b61046c57604051631afcd79f60e31b815260040160405180910390fd5b565b60408051808201825283815260208101839052905163014cf2b360e51b815260009173__$fd9c4ca1c9b5545e1f17f9e12436e2ab86$__9163299e5660916104b89160040161095b565b602060405180830381865af41580156104d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f9919061098c565b9392505050565b60004661a4b1148061051457504662066eee145b8061052057504661a4ba145b8061052d575046620ce043145b1561059a5760646001600160a01b031663a3b1b31d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610571573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610595919061098c565b905090565b504390565b60006105a9610311565b5468010000000000000000900460ff16919050565b6110a68061294483390190565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156105f657600080fd5b83516001600160a01b038116811461060d57600080fd5b6020850151604086015191945092506001600160401b0381111561063057600080fd5b8401601f8101861361064157600080fd5b80516001600160401b0381111561065a5761065a6105cb565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610688576106886105cb565b6040528181528282016020018810156106a057600080fd5b60005b828110156106bf576020818501810151838301820152016106a3565b506000602083830101528093505050509250925092565b634e487b7160e01b600052601160045260246000fd5b6001815b60018411156107275780850481111561070b5761070b6106d6565b600184161561071957908102905b60019390931c9280026106f0565b935093915050565b60008261073e57506001610336565b8161074b57506000610336565b8160018114610761576002811461076b57610787565b6001915050610336565b60ff84111561077c5761077c6106d6565b50506001821b610336565b5060208310610133831016604e8410600b84101617156107aa575081810a610336565b6107b760001984846106ec565b80600019048211156107cb576107cb6106d6565b029392505050565b60006104f9838361072f565b600181811c908216806107f357607f821691505b60208210810361081357634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561086357806000526020600020601f840160051c810160208510156108405750805b601f840160051c820191505b81811015610860576000815560010161084c565b50505b505050565b81516001600160401b03811115610881576108816105cb565b6108958161088f84546107df565b84610819565b6020601f8211600181146108c957600083156108b15750848201515b600019600385901b1c1916600184901b178455610860565b600084815260208120601f198516915b828110156108f957878501518255602094850194600190920191016108d9565b50848210156109175786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b60008261094357634e487b7160e01b600052601260045260246000fd5b500690565b80820180821115610336576103366106d6565b60408101818360005b6002811015610983578151835260209283019290910190600101610964565b50505092915050565b60006020828403121561099e57600080fd5b5051919050565b60805160a051611f656109df6000396000818161040b015261178f01526000818161026c015281816117fe015261186a0152611f656000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c8063685c40dd1161010f578063b0033450116100a2578063e6f5d30811610071578063e6f5d308146104bc578063ec732959146104e4578063ef4b4119146104ec578063f2fde38b146104f5576101e5565b8063b003345014610459578063b0e7f5bc14610462578063b9b3efe91461046b578063d71f152414610471576101e5565b80638d1ddfb1116100de5780638d1ddfb1146104065780638da5cb5b1461042d578063a9a8ce361461043e578063ade2ab6214610451576101e5565b8063685c40dd146103c3578063715018a6146103d657806371c5ecb1146103de5780637284e416146103f1576101e5565b80633adc821b1161018757806342cbb15c1161015657806342cbb15c146103705780634e60f55714610378578063600ed33814610380578063670a1ebb146103a0576101e5565b80633adc821b146103155780633ed9b8351461032a5780634232a3c31461034a57806342895b3d1461035d576101e5565b80632eb4a7ab116101c35780632eb4a7ab146102c757806337b1b263146102cf57806338bf282e146102e2578063390f2b65146102f5576101e5565b80630820dc2f1461022d57806316a56c4114610267578063290939b61461029c575b6101ee30610508565b6040516020016101fe9190611924565b60408051601f198184030181529082905262461bcd60e51b82526102249160040161195f565b60405180910390fd5b61025261023b366004611992565b600090815260046020526040902054600354111590565b60405190151581526020015b60405180910390f35b61028e7f000000000000000000000000000000000000000000000000000000000000000081565b60405190815260200161025e565b600a546102af906001600160a01b031681565b6040516001600160a01b03909116815260200161025e565b61028e6106b1565b61028e6102dd366004611992565b6106e5565b61028e6102f03660046119ab565b610706565b61028e610303366004611992565b60046020526000908152604090205481565b6103286103233660046119dc565b61079a565b005b61033d610338366004611992565b61095b565b60405161025e9190611a22565b6009546102af906001600160a01b031681565b61032861036b366004611a7b565b6109bd565b61028e610cea565b60025461028e565b61039361038e366004611992565b610d89565b60405161025e9190611b87565b61028e6103ae366004611992565b60009081526008602052604090206001015490565b61033d6103d13660046119ab565b610e18565b610328610f80565b61028e6103ec366004611992565b610f94565b6103f9610fa4565b60405161025e919061195f565b61028e7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b03166102af565b61032861044c366004611bb5565b611032565b60065461028e565b61028e60035481565b61028e60075481565b4361028e565b6104ad61047f366004611992565b6008602052600090815260409020805460018201546002909201546001600160a01b03909116919060ff1683565b60405161025e93929190611be1565b6102526104ca366004611992565b600754600091825260086020526040909120600101541490565b61028e611164565b61028e60055481565b610328610503366004611c05565b6111b1565b60408051602a808252606082810190935260009190602082018180368337019050509050600360fc1b8160008151811061054457610544611c35565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061057357610573611c35565b60200101906001600160f81b031916908160001a90535060005b60148110156106aa5760006105a3826013611c61565b6105ae906008611c74565b6105b9906002611d72565b6105cc906001600160a01b038716611d94565b60f81b9050600060108260f81c6105e39190611da8565b60f81b905060008160f81c60106105fa9190611dca565b8360f81c6106089190611de6565b60f81b9050610616826111ef565b85610622866002611c74565b61062d906002611dff565b8151811061063d5761063d611c35565b60200101906001600160f81b031916908160001a90535061065d816111ef565b85610669866002611c74565b610674906003611dff565b8151811061068457610684611c35565b60200101906001600160f81b031916908160001a905350506001909201915061058d9050565b5092915050565b60028054600091906106c590600190611c61565b815481106106d5576106d5611c35565b9060005260206000200154905090565b600681815481106106f557600080fd5b600091825260209091200154905081565b60408051808201825283815260208101839052905163014cf2b360e51b815260009173__$fd9c4ca1c9b5545e1f17f9e12436e2ab86$__9163299e56609161075091600401611e12565b602060405180830381865af415801561076d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107919190611e43565b90505b92915050565b60008460018111156107ae576107ae611b5d565b0361086057600a5460408051608081018252878152336020820190815281830185815260006060840190815293516334e59ef760e01b81529251600484015290516001600160a01b039081166024840152905160448301529151151560648201526084810186905260a481018590529116906334e59ef79060c401600060405180830381600087803b15801561084357600080fd5b505af1158015610857573d6000803e3d6000fd5b5050505061094a565b600184600181111561087457610874611b5d565b036109025760405162461bcd60e51b815260206004820152605260248201527f5a6b4b594352656769737472793a20666f72207265766f636174696f6e2c207560448201527f7365206164644f7065726174696f6e546f517565756528627974657333322c2060648201527152656769737472794f7065726174696f6e2960701b608482015260a401610224565b60405162461bcd60e51b815260206004820181905260248201527f5a6b4b594352656769737472793a20696e76616c6964206f7065726174696f6e6044820152606401610224565b610954858561122a565b5050505050565b60025460609082106109af5760405162461bcd60e51b815260206004820152601960248201527f537461727420696e646578206f7574206f6620626f756e6473000000000000006044820152606401610224565b600254610794908390610e18565b60075460008381526008602052604090206001015414610a515760405162461bcd60e51b815260206004820152604360248201527f5a6b436572746966696361746552656769737472793a207a6b4365727469666960448201527f63617465206973206e6f7420696e207475726e20746f2062652070726f6365736064820152621cd95960ea1b608482015260a401610224565b600160008381526008602052604090206002015460ff166004811115610a7957610a79611b5d565b03610b4c576000610aca7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017fc9211cf8a2ecf2d9ff7e3f783b959c25e2a209cb6cc7b15ff6d264cbc8a29632611e5c565b9050610ad88482858561162d565b6000838152600860205260408082206002808201805460ff19169091179055805460019091015491516001600160a01b039091169286927f9cb9155d4b0c129d1b924032efb4ac74da991e0b9970a7d01ba98e18213b768192610b3e9291908a90611e80565b60405180910390a350610ccd565b600360008381526008602052604090206002015460ff166004811115610b7457610b74611b5d565b03610c4a576000610bc57f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017fc9211cf8a2ecf2d9ff7e3f783b959c25e2a209cb6cc7b15ff6d264cbc8a29632611e5c565b9050610bd38484838561162d565b600254610be290600190611c61565b6003556000838152600860205260409081902060028101805460ff19166004179055805460019182015492516001600160a01b039091169286927f9cb9155d4b0c129d1b924032efb4ac74da991e0b9970a7d01ba98e18213b768192610b3e92908a90611e80565b60405162461bcd60e51b815260206004820152604c60248201527f5a6b436572746966696361746552656769737472793a2070726f63657373696e60448201527f6720696e76616c6964206f7065726174696f6e2e20546869732073686f756c6460648201526b103737ba103430b83832b71760a11b608482015260a401610224565b600160076000828254610ce09190611dff565b9091555050505050565b60004661a4b11480610cfe57504662066eee145b80610d0a57504661a4ba145b80610d17575046620ce043145b15610d845760646001600160a01b031663a3b1b31d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7f9190611e43565b905090565b504390565b610daa60408051606081018252600080825260208201819052909182015290565b600082815260086020908152604091829020825160608101845281546001600160a01b031681526001820154928101929092526002810154919290919083019060ff166004811115610dfe57610dfe611b5d565b6004811115610e0f57610e0f611b5d565b90525092915050565b6060818310610e795760405162461bcd60e51b815260206004820152602760248201527f537461727420696e646578206d757374206265206c657373207468616e20656e6044820152660c840d2dcc8caf60cb1b6064820152608401610224565b600254821115610ecb5760405162461bcd60e51b815260206004820152601760248201527f456e6420696e646578206f7574206f6620626f756e64730000000000000000006044820152606401610224565b6000610ed78484611c61565b905060008167ffffffffffffffff811115610ef457610ef4611a65565b604051908082528060200260200182016040528015610f1d578160200160208202803683370190505b50905060005b82811015610f77576002610f378288611dff565b81548110610f4757610f47611c35565b9060005260206000200154828281518110610f6457610f64611c35565b6020908102919091010152600101610f23565b50949350505050565b610f886116f4565b610f926000611721565b565b600281815481106106f557600080fd5b60018054610fb190611e9f565b80601f0160208091040260200160405190810160405280929190818152602001828054610fdd90611e9f565b801561102a5780601f10610fff5761010080835404028352916020019161102a565b820191906000526020600020905b81548152906001019060200180831161100d57829003601f168201915b505050505081565b600081600181111561104657611046611b5d565b036110df5760405162461bcd60e51b815260206004820152605760248201527f5a6b4b594352656769737472793a2063616e206e6f74206164644f706572617460448201527f696f6e546f517565756520776974686f75742074686520706172616d6574657260648201527f7320666f72207468652073616c74207265676973747279000000000000000000608482015260a401610224565b60018160018111156110f3576110f3611b5d565b0361090257600a546040516335d9fd6560e01b8152600481018490526001600160a01b03909116906335d9fd6590602401600060405180830381600087803b15801561113e57600080fd5b505af1158015611152573d6000803e3d6000fd5b50505050611160828261122a565b5050565b6111ae7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017fc9211cf8a2ecf2d9ff7e3f783b959c25e2a209cb6cc7b15ff6d264cbc8a29632611e5c565b81565b6111b96116f4565b6001600160a01b0381166111e357604051631e4fbdf760e01b815260006004820152602401610224565b6111ec81611721565b50565b6000600a60f883901c10156112165761120d60f883901c6030611ed9565b60f81b92915050565b61120d60f883901c6057611ed9565b919050565b600954604051633af32abf60e01b81523360048201526001600160a01b0390911690633af32abf90602401602060405180830381865afa158015611272573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112969190611ef2565b6112f05760405162461bcd60e51b815260206004820152602560248201527f5a6b436572746966696361746552656769737472793a206e6f74206120477561604482015264393234b0b760d91b6064820152608401610224565b600081600181111561130457611304611b5d565b036113c05760008281526008602052604081206002015460ff16600481111561132f5761132f611b5d565b146113985760405162461bcd60e51b815260206004820152603360248201527f5a6b436572746966696361746552656769737472793a207a6b436572746966696044820152726361746520616c72656164792065786973747360681b6064820152608401610224565b600082815260086020526040902060020180546001919060ff191682805b0217905550611590565b60018160018111156113d4576113d4611b5d565b0361153757600260008381526008602052604090206002015460ff16600481111561140157611401611b5d565b146114905760405162461bcd60e51b815260206004820152605360248201527f5a6b436572746966696361746552656769737472793a207a6b4365727469666960448201527f63617465206973206e6f742069737375656420616e642063616e207468657265606482015272199bdc99481b9bdd081899481c995d9bdad959606a1b608482015260a401610224565b6000828152600860205260409020546001600160a01b031633146115145760405162461bcd60e51b815260206004820152603560248201527f5a6b436572746966696361746552656769737472793a206e6f7420746865206360448201527437b93932b9b837b73234b7339023bab0b93234b0b760591b6064820152608401610224565b600082815260086020526040902060020180546003919060ff19166001836113b6565b60405162461bcd60e51b815260206004820152602860248201527f5a6b436572746966696361746552656769737472793a20696e76616c6964206f6044820152673832b930ba34b7b760c11b6064820152608401610224565b6006805460008481526008602052604090819020600180820193845581546001600160a01b0319163390811790925584549081019094557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f9093018590559054905184917fb1acf3fe87405cb3d477043a120b6933cf2364d4826ab90b112545cecc628e8f91611621918691611f14565b60405180910390a35050565b61164081858561163b6106b1565b611771565b61168c5760405162461bcd60e51b815260206004820152601960248201527f6d65726b6c652070726f6f66206973206e6f742076616c6964000000000000006044820152606401610224565b600061169982868561178b565b600280546001818101835560008390527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90910183905590549192506116de91611c61565b6000918252600460205260409091205550505050565b6000546001600160a01b03163314610f925760405163118cdaa760e01b8152336004820152602401610224565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008161177f86868661178b565b1490505b949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000083106117fc5760405162461bcd60e51b815260206004820152601c60248201527f5f696e64657820626967676572207468616e20747265652073697a65000000006044820152606401610224565b7f00000000000000000000000000000000000000000000000000000000000000008451146118655760405162461bcd60e51b8152602060048201526016602482015275092dcecc2d8d2c840bee0e4dedecce640d8cadccee8d60531b6044820152606401610224565b60005b7f00000000000000000000000000000000000000000000000000000000000000008110156118f757836001166001036118c5576118be8582815181106118b0576118b0611c35565b602002602001015184610706565b92506118eb565b6118e8838683815181106118db576118db611c35565b6020026020010151610706565b92505b600193841c9301611868565b50909392505050565b60005b8381101561191b578181015183820152602001611903565b50506000910152565b7203ab739bab83837b93a32b21036b2ba3437b21606d1b815260008251611952816013850160208701611900565b9190910160130192915050565b602081526000825180602084015261197e816040850160208701611900565b601f01601f19169190910160400192915050565b6000602082840312156119a457600080fd5b5035919050565b600080604083850312156119be57600080fd5b50508035926020909101359150565b80356002811061122557600080fd5b600080600080600060a086880312156119f457600080fd5b85359450611a04602087016119cd565b94979496505050506040830135926060810135926080909101359150565b602080825282518282018190526000918401906040840190835b81811015611a5a578351835260209384019390920191600101611a3c565b509095945050505050565b634e487b7160e01b600052604160045260246000fd5b600080600060608486031215611a9057600080fd5b8335925060208401359150604084013567ffffffffffffffff811115611ab557600080fd5b8401601f81018613611ac657600080fd5b803567ffffffffffffffff811115611ae057611ae0611a65565b8060051b604051601f19603f830116810181811067ffffffffffffffff82111715611b0d57611b0d611a65565b604052918252602081840181019290810189841115611b2b57600080fd5b6020850194505b83851015611b4e57843580825260209586019590935001611b32565b50809450505050509250925092565b634e487b7160e01b600052602160045260246000fd5b60058110611b8357611b83611b5d565b9052565b81516001600160a01b031681526020808301519082015260408083015160608301916106aa90840182611b73565b60008060408385031215611bc857600080fd5b82359150611bd8602084016119cd565b90509250929050565b6001600160a01b038416815260208101839052606081016117836040830184611b73565b600060208284031215611c1757600080fd5b81356001600160a01b0381168114611c2e57600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561079457610794611c4b565b808202811582820484141761079457610794611c4b565b6001815b6001841115611cc657808504811115611caa57611caa611c4b565b6001841615611cb857908102905b60019390931c928002611c8f565b935093915050565b600082611cdd57506001610794565b81611cea57506000610794565b8160018114611d005760028114611d0a57611d26565b6001915050610794565b60ff841115611d1b57611d1b611c4b565b50506001821b610794565b5060208310610133831016604e8410600b8410161715611d49575081810a610794565b611d566000198484611c8b565b8060001904821115611d6a57611d6a611c4b565b029392505050565b60006107918383611cce565b634e487b7160e01b600052601260045260246000fd5b600082611da357611da3611d7e565b500490565b600060ff831680611dbb57611dbb611d7e565b8060ff84160491505092915050565b60ff81811683821602908116908181146106aa576106aa611c4b565b60ff828116828216039081111561079457610794611c4b565b8082018082111561079457610794611c4b565b60408101818360005b6002811015611e3a578151835260209283019290910190600101611e1b565b50505092915050565b600060208284031215611e5557600080fd5b5051919050565b600082611e6b57611e6b611d7e565b500690565b60028110611b8357611b83611b5d565b60608101611e8e8286611e70565b602082019390935260400152919050565b600181811c90821680611eb357607f821691505b602082108103611ed357634e487b7160e01b600052602260045260246000fd5b50919050565b60ff818116838216019081111561079457610794611c4b565b600060208284031215611f0457600080fd5b81518015158114611c2e57600080fd5b60408101611f228285611e70565b826020830152939250505056fea26469706673582212201dc4e0f1a3161556bd25dc5199d18ed4368dc62277d1e291dc3fac09c9e5955c64736f6c634300081c00336080604052348015600f57600080fd5b506040516110a63803806110a6833981016040819052602c916077565b600080546001600160a01b039384166001600160a01b0319918216179091556001805492909316911617905560a5565b80516001600160a01b0381168114607257600080fd5b919050565b60008060408385031215608957600080fd5b609083605c565b9150609c60208401605c565b90509250929050565b610ff2806100b46000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806368e1e8c91161005b57806368e1e8c91461011d5780637f932b2d1461013e578063e59a2ca414610151578063fa2f2805146101645761007d565b806334e59ef7146100c557806335d9fd65146100da5780634232a3c3146100ed575b61008630610184565b6040516020016100969190610b06565b60408051601f198184030181529082905262461bcd60e51b82526100bc91600401610b41565b60405180910390fd5b6100d86100d3366004610b74565b61032d565b005b6100d86100e8366004610bae565b6103a6565b600054610100906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61013061012b366004610bae565b6103ef565b604051908152602001610114565b600154610100906001600160a01b031681565b6100d861015f366004610bae565b61048b565b610177610172366004610bae565b6105ef565b6040516101149190610bc7565b60408051602a808252606082810190935260009190602082018180368337019050509050600360fc1b816000815181106101c0576101c0610c43565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106101ef576101ef610c43565b60200101906001600160f81b031916908160001a90535060005b601481101561032657600061021f826013610c6f565b61022a906008610c88565b610235906002610d86565b610248906001600160a01b038716610daf565b60f81b9050600060108260f81c61025f9190610dc3565b60f81b905060008160f81c60106102769190610de5565b8360f81c6102849190610e01565b60f81b90506102928261099c565b8561029e866002610c88565b6102a9906002610e1a565b815181106102b9576102b9610c43565b60200101906001600160f81b031916908160001a9053506102d98161099c565b856102e5866002610c88565b6102f0906003610e1a565b8151811061030057610300610c43565b60200101906001600160f81b031916908160001a90535050600190920191506102099050565b5092915050565b6001546001600160a01b031633146103575760405162461bcd60e51b81526004016100bc90610e2d565b61036182826109d2565b6000828152600260209081526040808320600190810180549182018155845282842087359101819055835260039091529020839061039f8282610e9b565b5050505050565b6001546001600160a01b031633146103d05760405162461bcd60e51b81526004016100bc90610e2d565b600090815260036020819052604090912001805460ff19166001179055565b60008054604051633af32abf60e01b81523360048201526001600160a01b0390911690633af32abf90602401602060405180830381865afa158015610438573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045c9190610f01565b6104785760405162461bcd60e51b81526004016100bc90610f1e565b5060009081526002602052604090205490565b600054604051633af32abf60e01b81523360048201526001600160a01b0390911690633af32abf90602401602060405180830381865afa1580156104d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f79190610f01565b6105135760405162461bcd60e51b81526004016100bc90610f1e565b600061051e826105ef565b905080516000146105b05760405162461bcd60e51b815260206004820152605060248201527f48756d616e494453616c7452656769737472793a2073616c742063616e6e6f7460448201527f2062652072657365742069662074686572652061726520616374697665207a6b60648201526f10d95c9d1cc81b1bd8dada5b99c81a5d60821b608482015260a4016100bc565b6000828152600260208181526040808420848155815185815280840192839052948790529290915291516105ea9260019092019190610a82565b505050565b600054604051633af32abf60e01b81523360048201526060916001600160a01b031690633af32abf90602401602060405180830381865afa158015610638573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065c9190610f01565b6106785760405162461bcd60e51b81526004016100bc90610f1e565b600082815260026020526040812060010154815b8181101561079e5760008581526002602052604081206001018054839081106106b7576106b7610c43565b906000526020600020015490504260036000838152602001908152602001600020600201541180156106fc57506000818152600360208190526040909120015460ff16155b80156107825750600080548282526003602052604091829020600101549151633af32abf60e01b81526001600160a01b039283166004820152911690633af32abf90602401602060405180830381865afa15801561075e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107829190610f01565b15610795578361079181610f8a565b9450505b5060010161068c565b5060008267ffffffffffffffff8111156107ba576107ba610c2d565b60405190808252806020026020018201604052801561080c57816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816107d85790505b5090506000805b8381101561099157600087815260026020526040812060010180548390811061083e5761083e610c43565b9060005260206000200154905042600360008381526020019081526020016000206002015411801561088357506000818152600360208190526040909120015460ff16155b80156109095750600080548282526003602052604091829020600101549151633af32abf60e01b81526001600160a01b039283166004820152911690633af32abf90602401602060405180830381865afa1580156108e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109099190610f01565b156109885760008181526003602081815260409283902083516080810185528154815260018201546001600160a01b03169281019290925260028101549382019390935291015460ff1615156060820152845185908590811061096e5761096e610c43565b6020026020010181905250828061098490610f8a565b9350505b50600101610813565b509095945050505050565b6000600a60f883901c10156109c3576109ba60f883901c6030610fa3565b60f81b92915050565b6109ba60f883901c6057610fa3565b60008281526002602052604081205490036109f95760009182526002602052604090912055565b6000828152600260205260409020548114610a7e576040805162461bcd60e51b81526020600482015260248101919091527f48756d616e494453616c7452656769737472793a2073616c742068617368206460448201527f6f6573206e6f74206d61746368207468652072656769737465726564206f6e6560648201526084016100bc565b5050565b828054828255906000526020600020908101928215610abd579160200282015b82811115610abd578251825591602001919060010190610aa2565b50610ac9929150610acd565b5090565b5b80821115610ac95760008155600101610ace565b60005b83811015610afd578181015183820152602001610ae5565b50506000910152565b7203ab739bab83837b93a32b21036b2ba3437b21606d1b815260008251610b34816013850160208701610ae2565b9190910160130192915050565b6020815260008251806020840152610b60816040850160208701610ae2565b601f01601f19169190910160400192915050565b600080600083850360c0811215610b8a57600080fd5b6080811215610b9857600080fd5b5092946080860135945060a08601359350915050565b600060208284031215610bc057600080fd5b5035919050565b602080825282518282018190526000918401906040840190835b81811015610991578351805184526020808201516001600160a01b0316818601526040808301519086015260609182015115159185019190915290930192608090920191600101610be1565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b81810381811115610c8257610c82610c59565b92915050565b8082028115828204841417610c8257610c82610c59565b6001815b6001841115610cda57808504811115610cbe57610cbe610c59565b6001841615610ccc57908102905b60019390931c928002610ca3565b935093915050565b600082610cf157506001610c82565b81610cfe57506000610c82565b8160018114610d145760028114610d1e57610d3a565b6001915050610c82565b60ff841115610d2f57610d2f610c59565b50506001821b610c82565b5060208310610133831016604e8410600b8410161715610d5d575081810a610c82565b610d6a6000198484610c9f565b8060001904821115610d7e57610d7e610c59565b029392505050565b6000610d928383610ce2565b9392505050565b634e487b7160e01b600052601260045260246000fd5b600082610dbe57610dbe610d99565b500490565b600060ff831680610dd657610dd6610d99565b8060ff84160491505092915050565b60ff818116838216029081169081811461032657610326610c59565b60ff8281168282160390811115610c8257610c82610c59565b80820180821115610c8257610c82610c59565b6020808252603f908201527f48756d616e494453616c7452656769737472793a206f6e6c79207a6b4365727460408201527f52656769737472792063616e2063616c6c20746869732066756e6374696f6e00606082015260800190565b8015158114610e9857600080fd5b50565b813581556001810160208301356001600160a01b038116808214610ebe57600080fd5b82546001600160a01b031916179091555060408201356002820155600381016060830135610eeb81610e8a565b815490151560ff1660ff19919091161790555050565b600060208284031215610f1357600080fd5b8151610d9281610e8a565b60208082526046908201527f48756d616e494453616c7452656769737472793a206f6e6c792077686974656c60408201527f697374656420677561726469616e732063616e2063616c6c20746869732066756060820152653731ba34b7b760d11b608082015260a00190565b600060018201610f9c57610f9c610c59565b5060010190565b60ff8181168382160190811115610c8257610c82610c5956fea26469706673582212201a2860b3daabf96504f290b3771b824fa5dbdb4194f99391d5eb5f5e82a2b6ad64736f6c634300081c0033c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
}

// ZkKYCRegistryABI is the input ABI used to generate the binding from.
// Deprecated: Use ZkKYCRegistryMetaData.ABI instead.
var ZkKYCRegistryABI = ZkKYCRegistryMetaData.ABI

// ZkKYCRegistryBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ZkKYCRegistryMetaData.Bin instead.
var ZkKYCRegistryBin = ZkKYCRegistryMetaData.Bin

// DeployZkKYCRegistry deploys a new Ethereum contract, binding an instance of ZkKYCRegistry to it.
func DeployZkKYCRegistry(auth *bind.TransactOpts, backend bind.ContractBackend, GuardianRegistry_ common.Address, treeDepth_ *big.Int, description_ string) (common.Address, *types.Transaction, *ZkKYCRegistry, error) {
	parsed, err := ZkKYCRegistryMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ZkKYCRegistryBin), backend, GuardianRegistry_, treeDepth_, description_)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &ZkKYCRegistry{ZkKYCRegistryCaller: ZkKYCRegistryCaller{contract: contract}, ZkKYCRegistryTransactor: ZkKYCRegistryTransactor{contract: contract}, ZkKYCRegistryFilterer: ZkKYCRegistryFilterer{contract: contract}}, nil
}

// ZkKYCRegistry is an auto generated Go binding around an Ethereum contract.
type ZkKYCRegistry struct {
	ZkKYCRegistryCaller     // Read-only binding to the contract
	ZkKYCRegistryTransactor // Write-only binding to the contract
	ZkKYCRegistryFilterer   // Log filterer for contract events
}

// ZkKYCRegistryCaller is an auto generated read-only Go binding around an Ethereum contract.
type ZkKYCRegistryCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ZkKYCRegistryTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ZkKYCRegistryTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ZkKYCRegistryFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ZkKYCRegistryFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ZkKYCRegistrySession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ZkKYCRegistrySession struct {
	Contract     *ZkKYCRegistry    // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ZkKYCRegistryCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ZkKYCRegistryCallerSession struct {
	Contract *ZkKYCRegistryCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts        // Call options to use throughout this session
}

// ZkKYCRegistryTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ZkKYCRegistryTransactorSession struct {
	Contract     *ZkKYCRegistryTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts        // Transaction auth options to use throughout this session
}

// ZkKYCRegistryRaw is an auto generated low-level Go binding around an Ethereum contract.
type ZkKYCRegistryRaw struct {
	Contract *ZkKYCRegistry // Generic contract binding to access the raw methods on
}

// ZkKYCRegistryCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ZkKYCRegistryCallerRaw struct {
	Contract *ZkKYCRegistryCaller // Generic read-only contract binding to access the raw methods on
}

// ZkKYCRegistryTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ZkKYCRegistryTransactorRaw struct {
	Contract *ZkKYCRegistryTransactor // Generic write-only contract binding to access the raw methods on
}

// NewZkKYCRegistry creates a new instance of ZkKYCRegistry, bound to a specific deployed contract.
func NewZkKYCRegistry(address common.Address, backend bind.ContractBackend) (*ZkKYCRegistry, error) {
	contract, err := bindZkKYCRegistry(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ZkKYCRegistry{ZkKYCRegistryCaller: ZkKYCRegistryCaller{contract: contract}, ZkKYCRegistryTransactor: ZkKYCRegistryTransactor{contract: contract}, ZkKYCRegistryFilterer: ZkKYCRegistryFilterer{contract: contract}}, nil
}

// NewZkKYCRegistryCaller creates a new read-only instance of ZkKYCRegistry, bound to a specific deployed contract.
func NewZkKYCRegistryCaller(address common.Address, caller bind.ContractCaller) (*ZkKYCRegistryCaller, error) {
	contract, err := bindZkKYCRegistry(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ZkKYCRegistryCaller{contract: contract}, nil
}

// NewZkKYCRegistryTransactor creates a new write-only instance of ZkKYCRegistry, bound to a specific deployed contract.
func NewZkKYCRegistryTransactor(address common.Address, transactor bind.ContractTransactor) (*ZkKYCRegistryTransactor, error) {
	contract, err := bindZkKYCRegistry(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ZkKYCRegistryTransactor{contract: contract}, nil
}

// NewZkKYCRegistryFilterer creates a new log filterer instance of ZkKYCRegistry, bound to a specific deployed contract.
func NewZkKYCRegistryFilterer(address common.Address, filterer bind.ContractFilterer) (*ZkKYCRegistryFilterer, error) {
	contract, err := bindZkKYCRegistry(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ZkKYCRegistryFilterer{contract: contract}, nil
}

// bindZkKYCRegistry binds a generic wrapper to an already deployed contract.
func bindZkKYCRegistry(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ZkKYCRegistryMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ZkKYCRegistry *ZkKYCRegistryRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ZkKYCRegistry.Contract.ZkKYCRegistryCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ZkKYCRegistry *ZkKYCRegistryRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ZkKYCRegistry.Contract.ZkKYCRegistryTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ZkKYCRegistry *ZkKYCRegistryRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ZkKYCRegistry.Contract.ZkKYCRegistryTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ZkKYCRegistry *ZkKYCRegistryCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ZkKYCRegistry.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ZkKYCRegistry *ZkKYCRegistryTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ZkKYCRegistry.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ZkKYCRegistry *ZkKYCRegistryTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ZkKYCRegistry.Contract.contract.Transact(opts, method, params...)
}

// ZEROVALUE is a free data retrieval call binding the contract method 0xec732959.
//
// Solidity: function ZERO_VALUE() view returns(bytes32)
func (_ZkKYCRegistry *ZkKYCRegistryCaller) ZEROVALUE(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _ZkKYCRegistry.contract.Call(opts, &out, "ZERO_VALUE")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// ZEROVALUE is a free data retrieval call binding the contract method 0xec732959.
//
// Solidity: function ZERO_VALUE() view returns(bytes32)
func (_ZkKYCRegistry *ZkKYCRegistrySession) ZEROVALUE() ([32]byte, error) {
	return _ZkKYCRegistry.Contract.ZEROVALUE(&_ZkKYCRegistry.CallOpts)
}

// ZEROVALUE is a free data retrieval call binding the contract method 0xec732959.
//
// Solidity: function ZERO_VALUE() view returns(bytes32)
func (_ZkKYCRegistry *ZkKYCRegistryCallerSession) ZEROVALUE() ([32]byte, error) {
	return _ZkKYCRegistry.Contract.ZEROVALUE(&_ZkKYCRegistry.CallOpts)
}

// ZkCertificateQueue is a free data retrieval call binding the contract method 0x37b1b263.
//
// Solidity: function ZkCertificateQueue(uint256 ) view returns(bytes32)
func (_ZkKYCRegistry *ZkKYCRegistryCaller) ZkCertificateQueue(opts *bind.CallOpts, arg0 *big.Int) ([32]byte, error) {
	var out []interface{}
	err := _ZkKYCRegistry.contract.Call(opts, &out, "ZkCertificateQueue", arg0)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// ZkCertificateQueue is a free data retrieval call binding the contract method 0x37b1b263.
//
// Solidity: function ZkCertificateQueue(uint256 ) view returns(bytes32)
func (_ZkKYCRegistry *ZkKYCRegistrySession) ZkCertificateQueue(arg0 *big.Int) ([32]byte, error) {
	return _ZkKYCRegistry.Contract.ZkCertificateQueue(&_ZkKYCRegistry.CallOpts, arg0)
}

// ZkCertificateQueue is a free data retrieval call binding the contract method 0x37b1b263.
//
// Solidity: function ZkCertificateQueue(uint256 ) view returns(bytes32)
func (_ZkKYCRegistry *ZkKYCRegistryCallerSession) ZkCertificateQueue(arg0 *big.Int) ([32]byte, error) {
	return _ZkKYCRegistry.Contract.ZkCertificateQueue(&_ZkKYCRegistry.CallOpts, arg0)
}

// CurrentQueuePointer is a free data retrieval call binding the contract method 0xb0e7f5bc.
//
// Solidity: function currentQueuePointer() view returns(uint256)
func (_ZkKYCRegistry *ZkKYCRegistryCaller) CurrentQueuePointer(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ZkKYCRegistry.contract.Call(opts, &out, "currentQueuePointer")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CurrentQueuePointer is a free data retrieval call binding the contract method 0xb0e7f5bc.
//
// Solidity: function currentQueuePointer() view returns(uint256)
func (_ZkKYCRegistry *ZkKYCRegistrySession) CurrentQueuePointer() (*big.Int, error) {
	return _ZkKYCRegistry.Contract.CurrentQueuePointer(&_ZkKYCRegistry.CallOpts)
}

// CurrentQueuePointer is a free data retrieval call binding the contract method 0xb0e7f5bc.
//
// Solidity: function currentQueuePointer() view returns(uint256)
func (_ZkKYCRegistry *ZkKYCRegistryCallerSession) CurrentQueuePointer() (*big.Int, error) {
	return _ZkKYCRegistry.Contract.CurrentQueuePointer(&_ZkKYCRegistry.CallOpts)
}

// Description is a free data retrieval call binding the contract method 0x7284e416.
//
// Solidity: function description() view returns(string)
func (_ZkKYCRegistry *ZkKYCRegistryCaller) Description(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _ZkKYCRegistry.contract.Call(opts, &out, "description")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Description is a free data retrieval call binding the contract method 0x7284e416.
//
// Solidity: function description() view returns(string)
func (_ZkKYCRegistry *ZkKYCRegistrySession) Description() (string, error) {
	return _ZkKYCRegistry.Contract.Description(&_ZkKYCRegistry.CallOpts)
}

// Description is a free data retrieval call binding the contract method 0x7284e416.
//
// Solidity: function description() view returns(string)
func (_ZkKYCRegistry *ZkKYCRegistryCallerSession) Description() (string, error) {
	return _ZkKYCRegistry.Contract.Description(&_ZkKYCRegistry.CallOpts)
}

// GetBlockNumber is a free data retrieval call binding the contract method 0x42cbb15c.
//
// Solidity: function getBlockNumber() view returns(uint256 blockNumber)
func (_ZkKYCRegistry *ZkKYCRegistryCaller) GetBlockNumber(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ZkKYCRegistry.contract.Call(opts, &out, "getBlockNumber")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetBlockNumber is a free data retrieval call binding the contract method 0x42cbb15c.
//
// Solidity: function getBlockNumber() view returns(uint256 blockNumber)
func (_ZkKYCRegistry *ZkKYCRegistrySession) GetBlockNumber() (*big.Int, error) {
	return _ZkKYCRegistry.Contract.GetBlockNumber(&_ZkKYCRegistry.CallOpts)
}

// GetBlockNumber is a free data retrieval call binding the contract method 0x42cbb15c.
//
// Solidity: function getBlockNumber() view returns(uint256 blockNumber)
func (_ZkKYCRegistry *ZkKYCRegistryCallerSession) GetBlockNumber() (*big.Int, error) {
	return _ZkKYCRegistry.Contract.GetBlockNumber(&_ZkKYCRegistry.CallOpts)
}

// GetL1BlockNumber is a free data retrieval call binding the contract method 0xb9b3efe9.
//
// Solidity: function getL1BlockNumber() view returns(uint256 l1BlockNumber)
func (_ZkKYCRegistry *ZkKYCRegistryCaller) GetL1BlockNumber(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ZkKYCRegistry.contract.Call(opts, &out, "getL1BlockNumber")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetL1BlockNumber is a free data retrieval call binding the contract method 0xb9b3efe9.
//
// Solidity: function getL1BlockNumber() view returns(uint256 l1BlockNumber)
func (_ZkKYCRegistry *ZkKYCRegistrySession) GetL1BlockNumber() (*big.Int, error) {
	return _ZkKYCRegistry.Contract.GetL1BlockNumber(&_ZkKYCRegistry.CallOpts)
}

// GetL1BlockNumber is a free data retrieval call binding the contract method 0xb9b3efe9.
//
// Solidity: function getL1BlockNumber() view returns(uint256 l1BlockNumber)
func (_ZkKYCRegistry *ZkKYCRegistryCallerSession) GetL1BlockNumber() (*big.Int, error) {
	return _ZkKYCRegistry.Contract.GetL1BlockNumber(&_ZkKYCRegistry.CallOpts)
}

// GetMerkleRoots is a free data retrieval call binding the contract method 0x3ed9b835.
//
// Solidity: function getMerkleRoots(uint256 _startIndex) view returns(bytes32[])
func (_ZkKYCRegistry *ZkKYCRegistryCaller) GetMerkleRoots(opts *bind.CallOpts, _startIndex *big.Int) ([][32]byte, error) {
	var out []interface{}
	err := _ZkKYCRegistry.contract.Call(opts, &out, "getMerkleRoots", _startIndex)

	if err != nil {
		return *new([][32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([][32]byte)).(*[][32]byte)

	return out0, err

}

// GetMerkleRoots is a free data retrieval call binding the contract method 0x3ed9b835.
//
// Solidity: function getMerkleRoots(uint256 _startIndex) view returns(bytes32[])
func (_ZkKYCRegistry *ZkKYCRegistrySession) GetMerkleRoots(_startIndex *big.Int) ([][32]byte, error) {
	return _ZkKYCRegistry.Contract.GetMerkleRoots(&_ZkKYCRegistry.CallOpts, _startIndex)
}

// GetMerkleRoots is a free data retrieval call binding the contract method 0x3ed9b835.
//
// Solidity: function getMerkleRoots(uint256 _startIndex) view returns(bytes32[])
func (_ZkKYCRegistry *ZkKYCRegistryCallerSession) GetMerkleRoots(_startIndex *big.Int) ([][32]byte, error) {
	return _ZkKYCRegistry.Contract.GetMerkleRoots(&_ZkKYCRegistry.CallOpts, _startIndex)
}

// GetMerkleRoots0 is a free data retrieval call binding the contract method 0x685c40dd.
//
// Solidity: function getMerkleRoots(uint256 _startIndex, uint256 _endIndex) view returns(bytes32[])
func (_ZkKYCRegistry *ZkKYCRegistryCaller) GetMerkleRoots0(opts *bind.CallOpts, _startIndex *big.Int, _endIndex *big.Int) ([][32]byte, error) {
	var out []interface{}
	err := _ZkKYCRegistry.contract.Call(opts, &out, "getMerkleRoots0", _startIndex, _endIndex)

	if err != nil {
		return *new([][32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([][32]byte)).(*[][32]byte)

	return out0, err

}

// GetMerkleRoots0 is a free data retrieval call binding the contract method 0x685c40dd.
//
// Solidity: function getMerkleRoots(uint256 _startIndex, uint256 _endIndex) view returns(bytes32[])
func (_ZkKYCRegistry *ZkKYCRegistrySession) GetMerkleRoots0(_startIndex *big.Int, _endIndex *big.Int) ([][32]byte, error) {
	return _ZkKYCRegistry.Contract.GetMerkleRoots0(&_ZkKYCRegistry.CallOpts, _startIndex, _endIndex)
}

// GetMerkleRoots0 is a free data retrieval call binding the contract method 0x685c40dd.
//
// Solidity: function getMerkleRoots(uint256 _startIndex, uint256 _endIndex) view returns(bytes32[])
func (_ZkKYCRegistry *ZkKYCRegistryCallerSession) GetMerkleRoots0(_startIndex *big.Int, _endIndex *big.Int) ([][32]byte, error) {
	return _ZkKYCRegistry.Contract.GetMerkleRoots0(&_ZkKYCRegistry.CallOpts, _startIndex, _endIndex)
}

// GetQueuePosition is a free data retrieval call binding the contract method 0x670a1ebb.
//
// Solidity: function getQueuePosition(bytes32 zkCertificateHash) view returns(uint256)
func (_ZkKYCRegistry *ZkKYCRegistryCaller) GetQueuePosition(opts *bind.CallOpts, zkCertificateHash [32]byte) (*big.Int, error) {
	var out []interface{}
	err := _ZkKYCRegistry.contract.Call(opts, &out, "getQueuePosition", zkCertificateHash)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetQueuePosition is a free data retrieval call binding the contract method 0x670a1ebb.
//
// Solidity: function getQueuePosition(bytes32 zkCertificateHash) view returns(uint256)
func (_ZkKYCRegistry *ZkKYCRegistrySession) GetQueuePosition(zkCertificateHash [32]byte) (*big.Int, error) {
	return _ZkKYCRegistry.Contract.GetQueuePosition(&_ZkKYCRegistry.CallOpts, zkCertificateHash)
}

// GetQueuePosition is a free data retrieval call binding the contract method 0x670a1ebb.
//
// Solidity: function getQueuePosition(bytes32 zkCertificateHash) view returns(uint256)
func (_ZkKYCRegistry *ZkKYCRegistryCallerSession) GetQueuePosition(zkCertificateHash [32]byte) (*big.Int, error) {
	return _ZkKYCRegistry.Contract.GetQueuePosition(&_ZkKYCRegistry.CallOpts, zkCertificateHash)
}

// GetZkCertificateQueueLength is a free data retrieval call binding the contract method 0xade2ab62.
//
// Solidity: function getZkCertificateQueueLength() view returns(uint256)
func (_ZkKYCRegistry *ZkKYCRegistryCaller) GetZkCertificateQueueLength(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ZkKYCRegistry.contract.Call(opts, &out, "getZkCertificateQueueLength")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetZkCertificateQueueLength is a free data retrieval call binding the contract method 0xade2ab62.
//
// Solidity: function getZkCertificateQueueLength() view returns(uint256)
func (_ZkKYCRegistry *ZkKYCRegistrySession) GetZkCertificateQueueLength() (*big.Int, error) {
	return _ZkKYCRegistry.Contract.GetZkCertificateQueueLength(&_ZkKYCRegistry.CallOpts)
}

// GetZkCertificateQueueLength is a free data retrieval call binding the contract method 0xade2ab62.
//
// Solidity: function getZkCertificateQueueLength() view returns(uint256)
func (_ZkKYCRegistry *ZkKYCRegistryCallerSession) GetZkCertificateQueueLength() (*big.Int, error) {
	return _ZkKYCRegistry.Contract.GetZkCertificateQueueLength(&_ZkKYCRegistry.CallOpts)
}

// GuardianRegistry is a free data retrieval call binding the contract method 0x4232a3c3.
//
// Solidity: function guardianRegistry() view returns(address)
func (_ZkKYCRegistry *ZkKYCRegistryCaller) GuardianRegistry(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ZkKYCRegistry.contract.Call(opts, &out, "guardianRegistry")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GuardianRegistry is a free data retrieval call binding the contract method 0x4232a3c3.
//
// Solidity: function guardianRegistry() view returns(address)
func (_ZkKYCRegistry *ZkKYCRegistrySession) GuardianRegistry() (common.Address, error) {
	return _ZkKYCRegistry.Contract.GuardianRegistry(&_ZkKYCRegistry.CallOpts)
}

// GuardianRegistry is a free data retrieval call binding the contract method 0x4232a3c3.
//
// Solidity: function guardianRegistry() view returns(address)
func (_ZkKYCRegistry *ZkKYCRegistryCallerSession) GuardianRegistry() (common.Address, error) {
	return _ZkKYCRegistry.Contract.GuardianRegistry(&_ZkKYCRegistry.CallOpts)
}

// HashLeftRight is a free data retrieval call binding the contract method 0x38bf282e.
//
// Solidity: function hashLeftRight(bytes32 _left, bytes32 _right) pure returns(bytes32)
func (_ZkKYCRegistry *ZkKYCRegistryCaller) HashLeftRight(opts *bind.CallOpts, _left [32]byte, _right [32]byte) ([32]byte, error) {
	var out []interface{}
	err := _ZkKYCRegistry.contract.Call(opts, &out, "hashLeftRight", _left, _right)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// HashLeftRight is a free data retrieval call binding the contract method 0x38bf282e.
//
// Solidity: function hashLeftRight(bytes32 _left, bytes32 _right) pure returns(bytes32)
func (_ZkKYCRegistry *ZkKYCRegistrySession) HashLeftRight(_left [32]byte, _right [32]byte) ([32]byte, error) {
	return _ZkKYCRegistry.Contract.HashLeftRight(&_ZkKYCRegistry.CallOpts, _left, _right)
}

// HashLeftRight is a free data retrieval call binding the contract method 0x38bf282e.
//
// Solidity: function hashLeftRight(bytes32 _left, bytes32 _right) pure returns(bytes32)
func (_ZkKYCRegistry *ZkKYCRegistryCallerSession) HashLeftRight(_left [32]byte, _right [32]byte) ([32]byte, error) {
	return _ZkKYCRegistry.Contract.HashLeftRight(&_ZkKYCRegistry.CallOpts, _left, _right)
}

// HumanIDSaltRegistry is a free data retrieval call binding the contract method 0x290939b6.
//
// Solidity: function humanIDSaltRegistry() view returns(address)
func (_ZkKYCRegistry *ZkKYCRegistryCaller) HumanIDSaltRegistry(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ZkKYCRegistry.contract.Call(opts, &out, "humanIDSaltRegistry")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// HumanIDSaltRegistry is a free data retrieval call binding the contract method 0x290939b6.
//
// Solidity: function humanIDSaltRegistry() view returns(address)
func (_ZkKYCRegistry *ZkKYCRegistrySession) HumanIDSaltRegistry() (common.Address, error) {
	return _ZkKYCRegistry.Contract.HumanIDSaltRegistry(&_ZkKYCRegistry.CallOpts)
}

// HumanIDSaltRegistry is a free data retrieval call binding the contract method 0x290939b6.
//
// Solidity: function humanIDSaltRegistry() view returns(address)
func (_ZkKYCRegistry *ZkKYCRegistryCallerSession) HumanIDSaltRegistry() (common.Address, error) {
	return _ZkKYCRegistry.Contract.HumanIDSaltRegistry(&_ZkKYCRegistry.CallOpts)
}

// InitBlockHeight is a free data retrieval call binding the contract method 0xef4b4119.
//
// Solidity: function initBlockHeight() view returns(uint256)
func (_ZkKYCRegistry *ZkKYCRegistryCaller) InitBlockHeight(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ZkKYCRegistry.contract.Call(opts, &out, "initBlockHeight")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// InitBlockHeight is a free data retrieval call binding the contract method 0xef4b4119.
//
// Solidity: function initBlockHeight() view returns(uint256)
func (_ZkKYCRegistry *ZkKYCRegistrySession) InitBlockHeight() (*big.Int, error) {
	return _ZkKYCRegistry.Contract.InitBlockHeight(&_ZkKYCRegistry.CallOpts)
}

// InitBlockHeight is a free data retrieval call binding the contract method 0xef4b4119.
//
// Solidity: function initBlockHeight() view returns(uint256)
func (_ZkKYCRegistry *ZkKYCRegistryCallerSession) InitBlockHeight() (*big.Int, error) {
	return _ZkKYCRegistry.Contract.InitBlockHeight(&_ZkKYCRegistry.CallOpts)
}

// IsZkCertificateInTurn is a free data retrieval call binding the contract method 0xe6f5d308.
//
// Solidity: function isZkCertificateInTurn(bytes32 zkCertificateHash) view returns(bool)
func (_ZkKYCRegistry *ZkKYCRegistryCaller) IsZkCertificateInTurn(opts *bind.CallOpts, zkCertificateHash [32]byte) (bool, error) {
	var out []interface{}
	err := _ZkKYCRegistry.contract.Call(opts, &out, "isZkCertificateInTurn", zkCertificateHash)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsZkCertificateInTurn is a free data retrieval call binding the contract method 0xe6f5d308.
//
// Solidity: function isZkCertificateInTurn(bytes32 zkCertificateHash) view returns(bool)
func (_ZkKYCRegistry *ZkKYCRegistrySession) IsZkCertificateInTurn(zkCertificateHash [32]byte) (bool, error) {
	return _ZkKYCRegistry.Contract.IsZkCertificateInTurn(&_ZkKYCRegistry.CallOpts, zkCertificateHash)
}

// IsZkCertificateInTurn is a free data retrieval call binding the contract method 0xe6f5d308.
//
// Solidity: function isZkCertificateInTurn(bytes32 zkCertificateHash) view returns(bool)
func (_ZkKYCRegistry *ZkKYCRegistryCallerSession) IsZkCertificateInTurn(zkCertificateHash [32]byte) (bool, error) {
	return _ZkKYCRegistry.Contract.IsZkCertificateInTurn(&_ZkKYCRegistry.CallOpts, zkCertificateHash)
}

// MerkleRoot is a free data retrieval call binding the contract method 0x2eb4a7ab.
//
// Solidity: function merkleRoot() view returns(bytes32)
func (_ZkKYCRegistry *ZkKYCRegistryCaller) MerkleRoot(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _ZkKYCRegistry.contract.Call(opts, &out, "merkleRoot")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// MerkleRoot is a free data retrieval call binding the contract method 0x2eb4a7ab.
//
// Solidity: function merkleRoot() view returns(bytes32)
func (_ZkKYCRegistry *ZkKYCRegistrySession) MerkleRoot() ([32]byte, error) {
	return _ZkKYCRegistry.Contract.MerkleRoot(&_ZkKYCRegistry.CallOpts)
}

// MerkleRoot is a free data retrieval call binding the contract method 0x2eb4a7ab.
//
// Solidity: function merkleRoot() view returns(bytes32)
func (_ZkKYCRegistry *ZkKYCRegistryCallerSession) MerkleRoot() ([32]byte, error) {
	return _ZkKYCRegistry.Contract.MerkleRoot(&_ZkKYCRegistry.CallOpts)
}

// MerkleRootIndex is a free data retrieval call binding the contract method 0x390f2b65.
//
// Solidity: function merkleRootIndex(bytes32 ) view returns(uint256)
func (_ZkKYCRegistry *ZkKYCRegistryCaller) MerkleRootIndex(opts *bind.CallOpts, arg0 [32]byte) (*big.Int, error) {
	var out []interface{}
	err := _ZkKYCRegistry.contract.Call(opts, &out, "merkleRootIndex", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MerkleRootIndex is a free data retrieval call binding the contract method 0x390f2b65.
//
// Solidity: function merkleRootIndex(bytes32 ) view returns(uint256)
func (_ZkKYCRegistry *ZkKYCRegistrySession) MerkleRootIndex(arg0 [32]byte) (*big.Int, error) {
	return _ZkKYCRegistry.Contract.MerkleRootIndex(&_ZkKYCRegistry.CallOpts, arg0)
}

// MerkleRootIndex is a free data retrieval call binding the contract method 0x390f2b65.
//
// Solidity: function merkleRootIndex(bytes32 ) view returns(uint256)
func (_ZkKYCRegistry *ZkKYCRegistryCallerSession) MerkleRootIndex(arg0 [32]byte) (*big.Int, error) {
	return _ZkKYCRegistry.Contract.MerkleRootIndex(&_ZkKYCRegistry.CallOpts, arg0)
}

// MerkleRootValidIndex is a free data retrieval call binding the contract method 0xb0033450.
//
// Solidity: function merkleRootValidIndex() view returns(uint256)
func (_ZkKYCRegistry *ZkKYCRegistryCaller) MerkleRootValidIndex(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ZkKYCRegistry.contract.Call(opts, &out, "merkleRootValidIndex")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MerkleRootValidIndex is a free data retrieval call binding the contract method 0xb0033450.
//
// Solidity: function merkleRootValidIndex() view returns(uint256)
func (_ZkKYCRegistry *ZkKYCRegistrySession) MerkleRootValidIndex() (*big.Int, error) {
	return _ZkKYCRegistry.Contract.MerkleRootValidIndex(&_ZkKYCRegistry.CallOpts)
}

// MerkleRootValidIndex is a free data retrieval call binding the contract method 0xb0033450.
//
// Solidity: function merkleRootValidIndex() view returns(uint256)
func (_ZkKYCRegistry *ZkKYCRegistryCallerSession) MerkleRootValidIndex() (*big.Int, error) {
	return _ZkKYCRegistry.Contract.MerkleRootValidIndex(&_ZkKYCRegistry.CallOpts)
}

// MerkleRoots is a free data retrieval call binding the contract method 0x71c5ecb1.
//
// Solidity: function merkleRoots(uint256 ) view returns(bytes32)
func (_ZkKYCRegistry *ZkKYCRegistryCaller) MerkleRoots(opts *bind.CallOpts, arg0 *big.Int) ([32]byte, error) {
	var out []interface{}
	err := _ZkKYCRegistry.contract.Call(opts, &out, "merkleRoots", arg0)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// MerkleRoots is a free data retrieval call binding the contract method 0x71c5ecb1.
//
// Solidity: function merkleRoots(uint256 ) view returns(bytes32)
func (_ZkKYCRegistry *ZkKYCRegistrySession) MerkleRoots(arg0 *big.Int) ([32]byte, error) {
	return _ZkKYCRegistry.Contract.MerkleRoots(&_ZkKYCRegistry.CallOpts, arg0)
}

// MerkleRoots is a free data retrieval call binding the contract method 0x71c5ecb1.
//
// Solidity: function merkleRoots(uint256 ) view returns(bytes32)
func (_ZkKYCRegistry *ZkKYCRegistryCallerSession) MerkleRoots(arg0 *big.Int) ([32]byte, error) {
	return _ZkKYCRegistry.Contract.MerkleRoots(&_ZkKYCRegistry.CallOpts, arg0)
}

// MerkleRootsLength is a free data retrieval call binding the contract method 0x4e60f557.
//
// Solidity: function merkleRootsLength() view returns(uint256)
func (_ZkKYCRegistry *ZkKYCRegistryCaller) MerkleRootsLength(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ZkKYCRegistry.contract.Call(opts, &out, "merkleRootsLength")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MerkleRootsLength is a free data retrieval call binding the contract method 0x4e60f557.
//
// Solidity: function merkleRootsLength() view returns(uint256)
func (_ZkKYCRegistry *ZkKYCRegistrySession) MerkleRootsLength() (*big.Int, error) {
	return _ZkKYCRegistry.Contract.MerkleRootsLength(&_ZkKYCRegistry.CallOpts)
}

// MerkleRootsLength is a free data retrieval call binding the contract method 0x4e60f557.
//
// Solidity: function merkleRootsLength() view returns(uint256)
func (_ZkKYCRegistry *ZkKYCRegistryCallerSession) MerkleRootsLength() (*big.Int, error) {
	return _ZkKYCRegistry.Contract.MerkleRootsLength(&_ZkKYCRegistry.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ZkKYCRegistry *ZkKYCRegistryCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ZkKYCRegistry.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ZkKYCRegistry *ZkKYCRegistrySession) Owner() (common.Address, error) {
	return _ZkKYCRegistry.Contract.Owner(&_ZkKYCRegistry.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ZkKYCRegistry *ZkKYCRegistryCallerSession) Owner() (common.Address, error) {
	return _ZkKYCRegistry.Contract.Owner(&_ZkKYCRegistry.CallOpts)
}

// TreeDepth is a free data retrieval call binding the contract method 0x16a56c41.
//
// Solidity: function treeDepth() view returns(uint256)
func (_ZkKYCRegistry *ZkKYCRegistryCaller) TreeDepth(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ZkKYCRegistry.contract.Call(opts, &out, "treeDepth")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TreeDepth is a free data retrieval call binding the contract method 0x16a56c41.
//
// Solidity: function treeDepth() view returns(uint256)
func (_ZkKYCRegistry *ZkKYCRegistrySession) TreeDepth() (*big.Int, error) {
	return _ZkKYCRegistry.Contract.TreeDepth(&_ZkKYCRegistry.CallOpts)
}

// TreeDepth is a free data retrieval call binding the contract method 0x16a56c41.
//
// Solidity: function treeDepth() view returns(uint256)
func (_ZkKYCRegistry *ZkKYCRegistryCallerSession) TreeDepth() (*big.Int, error) {
	return _ZkKYCRegistry.Contract.TreeDepth(&_ZkKYCRegistry.CallOpts)
}

// TreeSize is a free data retrieval call binding the contract method 0x8d1ddfb1.
//
// Solidity: function treeSize() view returns(uint256)
func (_ZkKYCRegistry *ZkKYCRegistryCaller) TreeSize(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ZkKYCRegistry.contract.Call(opts, &out, "treeSize")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TreeSize is a free data retrieval call binding the contract method 0x8d1ddfb1.
//
// Solidity: function treeSize() view returns(uint256)
func (_ZkKYCRegistry *ZkKYCRegistrySession) TreeSize() (*big.Int, error) {
	return _ZkKYCRegistry.Contract.TreeSize(&_ZkKYCRegistry.CallOpts)
}

// TreeSize is a free data retrieval call binding the contract method 0x8d1ddfb1.
//
// Solidity: function treeSize() view returns(uint256)
func (_ZkKYCRegistry *ZkKYCRegistryCallerSession) TreeSize() (*big.Int, error) {
	return _ZkKYCRegistry.Contract.TreeSize(&_ZkKYCRegistry.CallOpts)
}

// VerifyMerkleRoot is a free data retrieval call binding the contract method 0x0820dc2f.
//
// Solidity: function verifyMerkleRoot(bytes32 _merkleRoot) view returns(bool)
func (_ZkKYCRegistry *ZkKYCRegistryCaller) VerifyMerkleRoot(opts *bind.CallOpts, _merkleRoot [32]byte) (bool, error) {
	var out []interface{}
	err := _ZkKYCRegistry.contract.Call(opts, &out, "verifyMerkleRoot", _merkleRoot)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// VerifyMerkleRoot is a free data retrieval call binding the contract method 0x0820dc2f.
//
// Solidity: function verifyMerkleRoot(bytes32 _merkleRoot) view returns(bool)
func (_ZkKYCRegistry *ZkKYCRegistrySession) VerifyMerkleRoot(_merkleRoot [32]byte) (bool, error) {
	return _ZkKYCRegistry.Contract.VerifyMerkleRoot(&_ZkKYCRegistry.CallOpts, _merkleRoot)
}

// VerifyMerkleRoot is a free data retrieval call binding the contract method 0x0820dc2f.
//
// Solidity: function verifyMerkleRoot(bytes32 _merkleRoot) view returns(bool)
func (_ZkKYCRegistry *ZkKYCRegistryCallerSession) VerifyMerkleRoot(_merkleRoot [32]byte) (bool, error) {
	return _ZkKYCRegistry.Contract.VerifyMerkleRoot(&_ZkKYCRegistry.CallOpts, _merkleRoot)
}

// ZkCertificateHashToData is a free data retrieval call binding the contract method 0xd71f1524.
//
// Solidity: function zkCertificateHashToData(bytes32 ) view returns(address guardian, uint256 queueIndex, uint8 state)
func (_ZkKYCRegistry *ZkKYCRegistryCaller) ZkCertificateHashToData(opts *bind.CallOpts, arg0 [32]byte) (struct {
	Guardian   common.Address
	QueueIndex *big.Int
	State      uint8
}, error) {
	var out []interface{}
	err := _ZkKYCRegistry.contract.Call(opts, &out, "zkCertificateHashToData", arg0)

	outstruct := new(struct {
		Guardian   common.Address
		QueueIndex *big.Int
		State      uint8
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Guardian = *abi.ConvertType(out[0], new(common.Address)).(*common.Address)
	outstruct.QueueIndex = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.State = *abi.ConvertType(out[2], new(uint8)).(*uint8)

	return *outstruct, err

}

// ZkCertificateHashToData is a free data retrieval call binding the contract method 0xd71f1524.
//
// Solidity: function zkCertificateHashToData(bytes32 ) view returns(address guardian, uint256 queueIndex, uint8 state)
func (_ZkKYCRegistry *ZkKYCRegistrySession) ZkCertificateHashToData(arg0 [32]byte) (struct {
	Guardian   common.Address
	QueueIndex *big.Int
	State      uint8
}, error) {
	return _ZkKYCRegistry.Contract.ZkCertificateHashToData(&_ZkKYCRegistry.CallOpts, arg0)
}

// ZkCertificateHashToData is a free data retrieval call binding the contract method 0xd71f1524.
//
// Solidity: function zkCertificateHashToData(bytes32 ) view returns(address guardian, uint256 queueIndex, uint8 state)
func (_ZkKYCRegistry *ZkKYCRegistryCallerSession) ZkCertificateHashToData(arg0 [32]byte) (struct {
	Guardian   common.Address
	QueueIndex *big.Int
	State      uint8
}, error) {
	return _ZkKYCRegistry.Contract.ZkCertificateHashToData(&_ZkKYCRegistry.CallOpts, arg0)
}

// ZkCertificateProcessingData is a free data retrieval call binding the contract method 0x600ed338.
//
// Solidity: function zkCertificateProcessingData(bytes32 zkCertificateHash) view returns((address,uint256,uint8))
func (_ZkKYCRegistry *ZkKYCRegistryCaller) ZkCertificateProcessingData(opts *bind.CallOpts, zkCertificateHash [32]byte) (KycCertificateData, error) {
	var out []interface{}
	err := _ZkKYCRegistry.contract.Call(opts, &out, "zkCertificateProcessingData", zkCertificateHash)

	if err != nil {
		return *new(KycCertificateData), err
	}

	out0 := *abi.ConvertType(out[0], new(KycCertificateData)).(*KycCertificateData)

	return out0, err

}

// ZkCertificateProcessingData is a free data retrieval call binding the contract method 0x600ed338.
//
// Solidity: function zkCertificateProcessingData(bytes32 zkCertificateHash) view returns((address,uint256,uint8))
func (_ZkKYCRegistry *ZkKYCRegistrySession) ZkCertificateProcessingData(zkCertificateHash [32]byte) (KycCertificateData, error) {
	return _ZkKYCRegistry.Contract.ZkCertificateProcessingData(&_ZkKYCRegistry.CallOpts, zkCertificateHash)
}

// ZkCertificateProcessingData is a free data retrieval call binding the contract method 0x600ed338.
//
// Solidity: function zkCertificateProcessingData(bytes32 zkCertificateHash) view returns((address,uint256,uint8))
func (_ZkKYCRegistry *ZkKYCRegistryCallerSession) ZkCertificateProcessingData(zkCertificateHash [32]byte) (KycCertificateData, error) {
	return _ZkKYCRegistry.Contract.ZkCertificateProcessingData(&_ZkKYCRegistry.CallOpts, zkCertificateHash)
}

// AddOperationToQueue is a paid mutator transaction binding the contract method 0x3adc821b.
//
// Solidity: function addOperationToQueue(bytes32 zkCertificateHash, uint8 operation, uint256 idHash, uint256 saltHash, uint256 expirationTime) returns()
func (_ZkKYCRegistry *ZkKYCRegistryTransactor) AddOperationToQueue(opts *bind.TransactOpts, zkCertificateHash [32]byte, operation uint8, idHash *big.Int, saltHash *big.Int, expirationTime *big.Int) (*types.Transaction, error) {
	return _ZkKYCRegistry.contract.Transact(opts, "addOperationToQueue", zkCertificateHash, operation, idHash, saltHash, expirationTime)
}

// AddOperationToQueue is a paid mutator transaction binding the contract method 0x3adc821b.
//
// Solidity: function addOperationToQueue(bytes32 zkCertificateHash, uint8 operation, uint256 idHash, uint256 saltHash, uint256 expirationTime) returns()
func (_ZkKYCRegistry *ZkKYCRegistrySession) AddOperationToQueue(zkCertificateHash [32]byte, operation uint8, idHash *big.Int, saltHash *big.Int, expirationTime *big.Int) (*types.Transaction, error) {
	return _ZkKYCRegistry.Contract.AddOperationToQueue(&_ZkKYCRegistry.TransactOpts, zkCertificateHash, operation, idHash, saltHash, expirationTime)
}

// AddOperationToQueue is a paid mutator transaction binding the contract method 0x3adc821b.
//
// Solidity: function addOperationToQueue(bytes32 zkCertificateHash, uint8 operation, uint256 idHash, uint256 saltHash, uint256 expirationTime) returns()
func (_ZkKYCRegistry *ZkKYCRegistryTransactorSession) AddOperationToQueue(zkCertificateHash [32]byte, operation uint8, idHash *big.Int, saltHash *big.Int, expirationTime *big.Int) (*types.Transaction, error) {
	return _ZkKYCRegistry.Contract.AddOperationToQueue(&_ZkKYCRegistry.TransactOpts, zkCertificateHash, operation, idHash, saltHash, expirationTime)
}

// AddOperationToQueue0 is a paid mutator transaction binding the contract method 0xa9a8ce36.
//
// Solidity: function addOperationToQueue(bytes32 zkCertificateHash, uint8 operation) returns()
func (_ZkKYCRegistry *ZkKYCRegistryTransactor) AddOperationToQueue0(opts *bind.TransactOpts, zkCertificateHash [32]byte, operation uint8) (*types.Transaction, error) {
	return _ZkKYCRegistry.contract.Transact(opts, "addOperationToQueue0", zkCertificateHash, operation)
}

// AddOperationToQueue0 is a paid mutator transaction binding the contract method 0xa9a8ce36.
//
// Solidity: function addOperationToQueue(bytes32 zkCertificateHash, uint8 operation) returns()
func (_ZkKYCRegistry *ZkKYCRegistrySession) AddOperationToQueue0(zkCertificateHash [32]byte, operation uint8) (*types.Transaction, error) {
	return _ZkKYCRegistry.Contract.AddOperationToQueue0(&_ZkKYCRegistry.TransactOpts, zkCertificateHash, operation)
}

// AddOperationToQueue0 is a paid mutator transaction binding the contract method 0xa9a8ce36.
//
// Solidity: function addOperationToQueue(bytes32 zkCertificateHash, uint8 operation) returns()
func (_ZkKYCRegistry *ZkKYCRegistryTransactorSession) AddOperationToQueue0(zkCertificateHash [32]byte, operation uint8) (*types.Transaction, error) {
	return _ZkKYCRegistry.Contract.AddOperationToQueue0(&_ZkKYCRegistry.TransactOpts, zkCertificateHash, operation)
}

// ProcessNextOperation is a paid mutator transaction binding the contract method 0x42895b3d.
//
// Solidity: function processNextOperation(uint256 leafIndex, bytes32 zkCertificateHash, bytes32[] merkleProof) returns()
func (_ZkKYCRegistry *ZkKYCRegistryTransactor) ProcessNextOperation(opts *bind.TransactOpts, leafIndex *big.Int, zkCertificateHash [32]byte, merkleProof [][32]byte) (*types.Transaction, error) {
	return _ZkKYCRegistry.contract.Transact(opts, "processNextOperation", leafIndex, zkCertificateHash, merkleProof)
}

// ProcessNextOperation is a paid mutator transaction binding the contract method 0x42895b3d.
//
// Solidity: function processNextOperation(uint256 leafIndex, bytes32 zkCertificateHash, bytes32[] merkleProof) returns()
func (_ZkKYCRegistry *ZkKYCRegistrySession) ProcessNextOperation(leafIndex *big.Int, zkCertificateHash [32]byte, merkleProof [][32]byte) (*types.Transaction, error) {
	return _ZkKYCRegistry.Contract.ProcessNextOperation(&_ZkKYCRegistry.TransactOpts, leafIndex, zkCertificateHash, merkleProof)
}

// ProcessNextOperation is a paid mutator transaction binding the contract method 0x42895b3d.
//
// Solidity: function processNextOperation(uint256 leafIndex, bytes32 zkCertificateHash, bytes32[] merkleProof) returns()
func (_ZkKYCRegistry *ZkKYCRegistryTransactorSession) ProcessNextOperation(leafIndex *big.Int, zkCertificateHash [32]byte, merkleProof [][32]byte) (*types.Transaction, error) {
	return _ZkKYCRegistry.Contract.ProcessNextOperation(&_ZkKYCRegistry.TransactOpts, leafIndex, zkCertificateHash, merkleProof)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ZkKYCRegistry *ZkKYCRegistryTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ZkKYCRegistry.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ZkKYCRegistry *ZkKYCRegistrySession) RenounceOwnership() (*types.Transaction, error) {
	return _ZkKYCRegistry.Contract.RenounceOwnership(&_ZkKYCRegistry.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ZkKYCRegistry *ZkKYCRegistryTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _ZkKYCRegistry.Contract.RenounceOwnership(&_ZkKYCRegistry.TransactOpts)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ZkKYCRegistry *ZkKYCRegistryTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _ZkKYCRegistry.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ZkKYCRegistry *ZkKYCRegistrySession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ZkKYCRegistry.Contract.TransferOwnership(&_ZkKYCRegistry.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ZkKYCRegistry *ZkKYCRegistryTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ZkKYCRegistry.Contract.TransferOwnership(&_ZkKYCRegistry.TransactOpts, newOwner)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() returns()
func (_ZkKYCRegistry *ZkKYCRegistryTransactor) Fallback(opts *bind.TransactOpts, calldata []byte) (*types.Transaction, error) {
	return _ZkKYCRegistry.contract.RawTransact(opts, calldata)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() returns()
func (_ZkKYCRegistry *ZkKYCRegistrySession) Fallback(calldata []byte) (*types.Transaction, error) {
	return _ZkKYCRegistry.Contract.Fallback(&_ZkKYCRegistry.TransactOpts, calldata)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() returns()
func (_ZkKYCRegistry *ZkKYCRegistryTransactorSession) Fallback(calldata []byte) (*types.Transaction, error) {
	return _ZkKYCRegistry.Contract.Fallback(&_ZkKYCRegistry.TransactOpts, calldata)
}

// ZkKYCRegistryCertificateProcessedIterator is returned from FilterCertificateProcessed and is used to iterate over the raw logs and unpacked data for CertificateProcessed events raised by the ZkKYCRegistry contract.
type ZkKYCRegistryCertificateProcessedIterator struct {
	Event *ZkKYCRegistryCertificateProcessed // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ZkKYCRegistryCertificateProcessedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ZkKYCRegistryCertificateProcessed)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ZkKYCRegistryCertificateProcessed)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ZkKYCRegistryCertificateProcessedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ZkKYCRegistryCertificateProcessedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ZkKYCRegistryCertificateProcessed represents a CertificateProcessed event raised by the ZkKYCRegistry contract.
type ZkKYCRegistryCertificateProcessed struct {
	ZkCertificateLeafHash [32]byte
	Guardian              common.Address
	Operation             uint8
	QueueIndex            *big.Int
	LeafIndex             *big.Int
	Raw                   types.Log // Blockchain specific contextual infos
}

// FilterCertificateProcessed is a free log retrieval operation binding the contract event 0x9cb9155d4b0c129d1b924032efb4ac74da991e0b9970a7d01ba98e18213b7681.
//
// Solidity: event CertificateProcessed(bytes32 indexed zkCertificateLeafHash, address indexed Guardian, uint8 operation, uint256 queueIndex, uint256 leafIndex)
func (_ZkKYCRegistry *ZkKYCRegistryFilterer) FilterCertificateProcessed(opts *bind.FilterOpts, zkCertificateLeafHash [][32]byte, Guardian []common.Address) (*ZkKYCRegistryCertificateProcessedIterator, error) {

	var zkCertificateLeafHashRule []interface{}
	for _, zkCertificateLeafHashItem := range zkCertificateLeafHash {
		zkCertificateLeafHashRule = append(zkCertificateLeafHashRule, zkCertificateLeafHashItem)
	}
	var GuardianRule []interface{}
	for _, GuardianItem := range Guardian {
		GuardianRule = append(GuardianRule, GuardianItem)
	}

	logs, sub, err := _ZkKYCRegistry.contract.FilterLogs(opts, "CertificateProcessed", zkCertificateLeafHashRule, GuardianRule)
	if err != nil {
		return nil, err
	}
	return &ZkKYCRegistryCertificateProcessedIterator{contract: _ZkKYCRegistry.contract, event: "CertificateProcessed", logs: logs, sub: sub}, nil
}

// WatchCertificateProcessed is a free log subscription operation binding the contract event 0x9cb9155d4b0c129d1b924032efb4ac74da991e0b9970a7d01ba98e18213b7681.
//
// Solidity: event CertificateProcessed(bytes32 indexed zkCertificateLeafHash, address indexed Guardian, uint8 operation, uint256 queueIndex, uint256 leafIndex)
func (_ZkKYCRegistry *ZkKYCRegistryFilterer) WatchCertificateProcessed(opts *bind.WatchOpts, sink chan<- *ZkKYCRegistryCertificateProcessed, zkCertificateLeafHash [][32]byte, Guardian []common.Address) (event.Subscription, error) {

	var zkCertificateLeafHashRule []interface{}
	for _, zkCertificateLeafHashItem := range zkCertificateLeafHash {
		zkCertificateLeafHashRule = append(zkCertificateLeafHashRule, zkCertificateLeafHashItem)
	}
	var GuardianRule []interface{}
	for _, GuardianItem := range Guardian {
		GuardianRule = append(GuardianRule, GuardianItem)
	}

	logs, sub, err := _ZkKYCRegistry.contract.WatchLogs(opts, "CertificateProcessed", zkCertificateLeafHashRule, GuardianRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ZkKYCRegistryCertificateProcessed)
				if err := _ZkKYCRegistry.contract.UnpackLog(event, "CertificateProcessed", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseCertificateProcessed is a log parse operation binding the contract event 0x9cb9155d4b0c129d1b924032efb4ac74da991e0b9970a7d01ba98e18213b7681.
//
// Solidity: event CertificateProcessed(bytes32 indexed zkCertificateLeafHash, address indexed Guardian, uint8 operation, uint256 queueIndex, uint256 leafIndex)
func (_ZkKYCRegistry *ZkKYCRegistryFilterer) ParseCertificateProcessed(log types.Log) (*ZkKYCRegistryCertificateProcessed, error) {
	event := new(ZkKYCRegistryCertificateProcessed)
	if err := _ZkKYCRegistry.contract.UnpackLog(event, "CertificateProcessed", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ZkKYCRegistryInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the ZkKYCRegistry contract.
type ZkKYCRegistryInitializedIterator struct {
	Event *ZkKYCRegistryInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ZkKYCRegistryInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ZkKYCRegistryInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ZkKYCRegistryInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ZkKYCRegistryInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ZkKYCRegistryInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ZkKYCRegistryInitialized represents a Initialized event raised by the ZkKYCRegistry contract.
type ZkKYCRegistryInitialized struct {
	Version uint64
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_ZkKYCRegistry *ZkKYCRegistryFilterer) FilterInitialized(opts *bind.FilterOpts) (*ZkKYCRegistryInitializedIterator, error) {

	logs, sub, err := _ZkKYCRegistry.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &ZkKYCRegistryInitializedIterator{contract: _ZkKYCRegistry.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_ZkKYCRegistry *ZkKYCRegistryFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *ZkKYCRegistryInitialized) (event.Subscription, error) {

	logs, sub, err := _ZkKYCRegistry.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ZkKYCRegistryInitialized)
				if err := _ZkKYCRegistry.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_ZkKYCRegistry *ZkKYCRegistryFilterer) ParseInitialized(log types.Log) (*ZkKYCRegistryInitialized, error) {
	event := new(ZkKYCRegistryInitialized)
	if err := _ZkKYCRegistry.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ZkKYCRegistryOperationQueuedIterator is returned from FilterOperationQueued and is used to iterate over the raw logs and unpacked data for OperationQueued events raised by the ZkKYCRegistry contract.
type ZkKYCRegistryOperationQueuedIterator struct {
	Event *ZkKYCRegistryOperationQueued // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ZkKYCRegistryOperationQueuedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ZkKYCRegistryOperationQueued)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ZkKYCRegistryOperationQueued)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ZkKYCRegistryOperationQueuedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ZkKYCRegistryOperationQueuedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ZkKYCRegistryOperationQueued represents a OperationQueued event raised by the ZkKYCRegistry contract.
type ZkKYCRegistryOperationQueued struct {
	ZkCertificateLeafHash [32]byte
	Guardian              common.Address
	Operation             uint8
	QueueIndex            *big.Int
	Raw                   types.Log // Blockchain specific contextual infos
}

// FilterOperationQueued is a free log retrieval operation binding the contract event 0xb1acf3fe87405cb3d477043a120b6933cf2364d4826ab90b112545cecc628e8f.
//
// Solidity: event OperationQueued(bytes32 indexed zkCertificateLeafHash, address indexed Guardian, uint8 operation, uint256 queueIndex)
func (_ZkKYCRegistry *ZkKYCRegistryFilterer) FilterOperationQueued(opts *bind.FilterOpts, zkCertificateLeafHash [][32]byte, Guardian []common.Address) (*ZkKYCRegistryOperationQueuedIterator, error) {

	var zkCertificateLeafHashRule []interface{}
	for _, zkCertificateLeafHashItem := range zkCertificateLeafHash {
		zkCertificateLeafHashRule = append(zkCertificateLeafHashRule, zkCertificateLeafHashItem)
	}
	var GuardianRule []interface{}
	for _, GuardianItem := range Guardian {
		GuardianRule = append(GuardianRule, GuardianItem)
	}

	logs, sub, err := _ZkKYCRegistry.contract.FilterLogs(opts, "OperationQueued", zkCertificateLeafHashRule, GuardianRule)
	if err != nil {
		return nil, err
	}
	return &ZkKYCRegistryOperationQueuedIterator{contract: _ZkKYCRegistry.contract, event: "OperationQueued", logs: logs, sub: sub}, nil
}

// WatchOperationQueued is a free log subscription operation binding the contract event 0xb1acf3fe87405cb3d477043a120b6933cf2364d4826ab90b112545cecc628e8f.
//
// Solidity: event OperationQueued(bytes32 indexed zkCertificateLeafHash, address indexed Guardian, uint8 operation, uint256 queueIndex)
func (_ZkKYCRegistry *ZkKYCRegistryFilterer) WatchOperationQueued(opts *bind.WatchOpts, sink chan<- *ZkKYCRegistryOperationQueued, zkCertificateLeafHash [][32]byte, Guardian []common.Address) (event.Subscription, error) {

	var zkCertificateLeafHashRule []interface{}
	for _, zkCertificateLeafHashItem := range zkCertificateLeafHash {
		zkCertificateLeafHashRule = append(zkCertificateLeafHashRule, zkCertificateLeafHashItem)
	}
	var GuardianRule []interface{}
	for _, GuardianItem := range Guardian {
		GuardianRule = append(GuardianRule, GuardianItem)
	}

	logs, sub, err := _ZkKYCRegistry.contract.WatchLogs(opts, "OperationQueued", zkCertificateLeafHashRule, GuardianRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ZkKYCRegistryOperationQueued)
				if err := _ZkKYCRegistry.contract.UnpackLog(event, "OperationQueued", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOperationQueued is a log parse operation binding the contract event 0xb1acf3fe87405cb3d477043a120b6933cf2364d4826ab90b112545cecc628e8f.
//
// Solidity: event OperationQueued(bytes32 indexed zkCertificateLeafHash, address indexed Guardian, uint8 operation, uint256 queueIndex)
func (_ZkKYCRegistry *ZkKYCRegistryFilterer) ParseOperationQueued(log types.Log) (*ZkKYCRegistryOperationQueued, error) {
	event := new(ZkKYCRegistryOperationQueued)
	if err := _ZkKYCRegistry.contract.UnpackLog(event, "OperationQueued", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ZkKYCRegistryOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the ZkKYCRegistry contract.
type ZkKYCRegistryOwnershipTransferredIterator struct {
	Event *ZkKYCRegistryOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ZkKYCRegistryOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ZkKYCRegistryOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ZkKYCRegistryOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ZkKYCRegistryOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ZkKYCRegistryOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ZkKYCRegistryOwnershipTransferred represents a OwnershipTransferred event raised by the ZkKYCRegistry contract.
type ZkKYCRegistryOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ZkKYCRegistry *ZkKYCRegistryFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*ZkKYCRegistryOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ZkKYCRegistry.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &ZkKYCRegistryOwnershipTransferredIterator{contract: _ZkKYCRegistry.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ZkKYCRegistry *ZkKYCRegistryFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *ZkKYCRegistryOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ZkKYCRegistry.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ZkKYCRegistryOwnershipTransferred)
				if err := _ZkKYCRegistry.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ZkKYCRegistry *ZkKYCRegistryFilterer) ParseOwnershipTransferred(log types.Log) (*ZkKYCRegistryOwnershipTransferred, error) {
	event := new(ZkKYCRegistryOwnershipTransferred)
	if err := _ZkKYCRegistry.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
